# Generated by Django 4.2 on 2023-06-03 14:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
        ('commons', '0002_initial'),
        ('contacts', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='segment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='segment',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='segment',
            name='members',
            field=models.ManyToManyField(related_name='segments', through='contacts.ContactInSegment',
                                         to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='segment',
            name='tags',
            field=models.ManyToManyField(related_name='segments', to='commons.tag'),
        ),
        migrations.AddField(
            model_name='segment',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='list',
            name='contacts',
            field=models.ManyToManyField(related_name='lists', through='contacts.ContactInList', to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='list',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='list',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='list',
            name='tags',
            field=models.ManyToManyField(related_name='lists', to='commons.tag'),
        ),
        migrations.AddField(
            model_name='list',
            name='unsubscribed_contacts',
            field=models.ManyToManyField(blank=True, related_name='unsubscribed_lists', to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='list',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='groupofconditions',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='groupofconditions',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='groupofconditions',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='contacts.segment'),
        ),
        migrations.AddField(
            model_name='groupofconditions',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='databasetosync',
            name='workspace',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='databasestosync', to='users.workspace'),
        ),
        migrations.AddField(
            model_name='databaserule',
            name='db',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.databasetosync'),
        ),
        migrations.AddField(
            model_name='databaserule',
            name='list',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.list'),
        ),
        migrations.AddField(
            model_name='customfieldofcontact',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields_value', to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='customfieldofcontact',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customfieldofcontact',
            name='custom_field',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.customfield'),
        ),
        migrations.AddField(
            model_name='customfieldofcontact',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='customfieldofcontact',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='customfield',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customfield',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='customfield',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='csvimporthistory',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='csvimporthistory',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='csvimporthistory',
            name='list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contacts.list'),
        ),
        migrations.AddField(
            model_name='csvimporthistory',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='contactinsegmenthistory',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinsegmenthistory',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='contactinsegmenthistory',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.segment'),
        ),
        migrations.AddField(
            model_name='contactinsegmenthistory',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='contactinsegment',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='contactinsegment',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinsegment',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='contactinsegment',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.segment'),
        ),
        migrations.AddField(
            model_name='contactinsegment',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='contactinlisthistory',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinlisthistory',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='contactinlisthistory',
            name='list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.list'),
        ),
        migrations.AddField(
            model_name='contactinlisthistory',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='contactinlist',
            name='contact',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.contact'),
        ),
        migrations.AddField(
            model_name='contactinlist',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contactinlist',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='contactinlist',
            name='list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contacts.list'),
        ),
        migrations.AddField(
            model_name='contactinlist',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='contact',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='contact',
            name='custom_fields',
            field=models.ManyToManyField(blank=True, related_name='contacts', through='contacts.CustomFieldOfContact',
                                         to='contacts.customfield'),
        ),
        migrations.AddField(
            model_name='contact',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='contact',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AddField(
            model_name='condition',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL,
                                    related_name='%(class)s_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='condition',
            name='custom_field',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.customfield'),
        ),
        migrations.AddField(
            model_name='condition',
            name='edit_history',
            field=models.ManyToManyField(blank=True, to='commons.history'),
        ),
        migrations.AddField(
            model_name='condition',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='contacts.groupofconditions'),
        ),
        migrations.AddField(
            model_name='condition',
            name='list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contacts.list'),
        ),
        migrations.AddField(
            model_name='condition',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.AlterUniqueTogether(
            name='customfieldofcontact',
            unique_together={('custom_field', 'contact')},
        ),
        migrations.AlterUniqueTogether(
            name='customfield',
            unique_together={('name', 'workspace')},
        ),
        migrations.AlterUniqueTogether(
            name='contactinsegment',
            unique_together={('contact', 'segment')},
        ),
        migrations.AlterUniqueTogether(
            name='contactinlist',
            unique_together={('contact', 'list')},
        ),
        migrations.AlterUniqueTogether(
            name='contact',
            unique_together={('email', 'workspace')},
        ),
    ]
