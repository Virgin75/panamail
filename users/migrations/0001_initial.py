# Generated by Django 4.0 on 2023-04-01 19:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('smtp', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='MemberOfWorkspace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rights', models.CharField(choices=[('AD', 'Admin'), ('ME', 'Member'), ('RO', 'Read-only')], max_length=2)),
                ('added_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member', to='users.customuser')),
            ],
            options={
                'verbose_name_plural': 'Relations Users <> Workspace',
            },
        ),
        migrations.CreateModel(
            name='Workspace',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='uploads')),
                ('address', models.CharField(blank=True, max_length=125, null=True)),
                ('auto_utm_field', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('members', models.ManyToManyField(blank=True, related_name='workspaces', through='users.MemberOfWorkspace', to=settings.AUTH_USER_MODEL)),
                ('smtp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='smtp.smtp')),
            ],
        ),
        migrations.AddField(
            model_name='memberofworkspace',
            name='workspace',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.workspace'),
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('invited_user', models.EmailField(max_length=100)),
                ('role', models.CharField(choices=[('AD', 'Admin'), ('ME', 'Member'), ('RO', 'Read-only')], max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Invitation not answered.'), ('ACCEPTED', 'Invitation was accepted.')], default='PENDING', max_length=10)),
                ('to_workspace', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='users.workspace')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='memberofworkspace',
            unique_together={('user', 'workspace')},
        ),
    ]
